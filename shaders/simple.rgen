#version 460
#extension GL_NV_ray_tracing : require

layout(binding = 0) uniform accelerationStructureNV scene;
layout(binding = 1, rgba8) uniform image2D result;
layout(binding = 2) uniform GlobalUniforms
{
	mat4 model;
	mat4 view;
	mat4 proj;
	mat4 iview;
	mat4 iproj;
	vec4 light_pos;
} ubo;

struct HitPayload
{
	vec4 color_dist;
};

layout(location = 0) rayPayloadNV HitPayload payload;

void main()
{
	uvec2 launch_index = gl_LaunchIDNV.xy;
	vec2 dims = vec2(gl_LaunchSizeNV.xy);
	vec2 d = (((launch_index.xy + 0.5f) / dims.xy) * 2.0f - 1.0f);

	vec3 origin = (ubo.iview * vec4(0, 0, 0, 1.0)).xyz;
	vec4 target = ubo.iproj * vec4(d.x, d.y, 1.0, 1.0);
	vec3 dir = (ubo.iview * vec4(target.xyz, 0.0)).xyz;

	const uint ray_flags = gl_RayFlagsOpaqueNV;
	
	vec3 final_color = vec3(0.0);

	traceNV(scene, ray_flags, 0xFF, 0, 1, 0, origin, 0.0, dir, 1000.0, 0);
	
	const vec3 color = payload.color_dist.xyz;
	const float hdist = payload.color_dist.w;

	imageStore(result, ivec2(gl_LaunchIDNV.xy), vec4(color, 1.0));
}

